package workouts

import (
	"github.com/invopop/ctxi18n/i18n"
	"github.com/jovandeginste/workout-tracker/v2/pkg/database"
	"github.com/jovandeginste/workout-tracker/v2/views/helpers"
)

templ Actions(w *database.Workout) {
	if w.HasFile() {
		<form action={ templ.SafeURL(helpers.RouteFor(ctx, "workout-download", w.ID)) } method="get">
			<button class="download" title={ i18n.T(ctx, "translation.download") }>
				<a>
					@helpers.IconFor("download")
				</a>
			</button>
		</form>
	}
	<form action={ templ.SafeURL(helpers.RouteFor(ctx, "workout-edit", w.ID)) } method="get">
		<button class="edit" title={ i18n.T(ctx, "translation.edit") }>
			<a>
				@helpers.IconFor("edit")
			</a>
		</button>
	</form>
	if w.PublicUUID != nil {
		<form
			onsubmit="copyToClipboard('public_uuid'); return false;"
		>
			<input
				type="text"
				name="public_uuid"
				id="public_uuid"
				data-notice={ i18n.T(ctx, "translation.Publicly_shareable_link_was_copied_to_clipboard") }
				class="hidden"
				value={ helpers.RouteFor(ctx, "share", w.PublicUUID) }
			/>
			<script>
        var uuidText = document.getElementById("public_uuid");
        uuidText.value = new URL(uuidText.value, document.location).href;
      </script>
			<button
				class="share"
				title={ i18n.T(ctx, "translation.Copy_publicly_shareable_link") }
			>
				<a>
					@helpers.IconFor("share")
				</a>
			</button>
		</form>

       	<form action={ templ.SafeURL(helpers.RouteFor(ctx, "workout-share-delete", w.ID)) } method="delete">
      		<button
     			class="share"
     			title={ i18n.T(ctx, "translation.Delete_publicly_shareable_link") }
      		>
     			<a>
        				@helpers.IconFor("generate-share")
     			</a>
      		</button>
       	</form>
	}
	<form action={ templ.SafeURL(helpers.RouteFor(ctx, "workout-share", w.ID)) } method="post">
		<button
			class="share dangerous"
			title={ i18n.T(ctx, "translation.Regenerate_publicly_shareable_link") }
		>
			<a>
				@helpers.IconFor("generate-share")
			</a>
		</button>
	</form>
	if w.HasFile() {
		<form action={ templ.SafeURL(helpers.RouteFor(ctx, "workout-refresh", w.ID)) } method="post">
			<button title={ i18n.T(ctx, "translation.refresh") }>
				<a>
					@helpers.IconFor("refresh")
				</a>
			</button>
		</form>
		<form action={ templ.SafeURL(helpers.RouteFor(ctx, "workout-route-segment", w.ID)) } method="get">
			<button title={ i18n.T(ctx, "translation.create_route_segment") }>
				<a>
					@helpers.IconFor("route-segment")
				</a>
			</button>
		</form>
	}
	<button
		hx-get={ helpers.RouteFor(ctx, "workout-delete-confirm", w.ID) }
		hx-target="#modal-container"
		hx-swap="innerHTML"
		class="dangerous"
		title={ i18n.T(ctx, "translation.delete") }
	>
		@helpers.IconFor("delete")
	</button>
	<div id="modal-container">
		// Modal content will be loaded here
	</div>
}

templ DeleteModal(w *database.Workout) {
	<div id="modalConfirmDelete" class="modal">
		<div class="window">
			<div class="flex justify-end p-2">
				<button
					class="close-modal"
					hx-get={ helpers.RouteFor(ctx, "workouts", w.ID) }
					hx-target="body"
					hx-swap="innerHTML"
				>
					<a>
						@helpers.IconFor("close")
					</a>
				</button>
			</div>
			<div class="modal-content">
				<h3>
					{ i18n.T(ctx, "translation.Are_you_sure_you_want_to_delete_this_s", i18n.T(ctx, "misc.workout")) }
					<div title={ i18n.T(ctx, w.Type.StringT()) }>
						@helpers.IconFor(w.Type.String())
						{ w.Name }
					</div>
				</h3>
				<div class="flex">
					<button
						hx-post={ helpers.RouteFor(ctx, "workout-delete", w.ID) }
						class="confirm"
					>{ i18n.T(ctx, "translation.Continue") }</button>
					<button
						hx-get={ helpers.RouteFor(ctx, "workouts", w.ID) }
						hx-target="body"
						hx-swap="innerHTML"
						class="cancel"
					>{ i18n.T(ctx, "translation.Cancel") }</button>
				</div>
			</div>
		</div>
	</div>
}
