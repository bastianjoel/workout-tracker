package workouts

import (
	"github.com/invopop/ctxi18n/i18n"
	"github.com/jovandeginste/workout-tracker/v2/pkg/database"
	"github.com/jovandeginste/workout-tracker/v2/views/helpers"
)

type item struct {
	Item  database.BreakdownItem
	Label string
}

templ ShowStats(stats database.WorkoutBreakdown) {
	{{ pu := helpers.CurrentUser(ctx).PreferredUnits() }}
	{{
data := []item{}
for _, i := range stats.Items {
	i.Localize(pu)

	data = append(data, item{
		Item:  i,
		Label: PointTitle(ctx, pu, i.FirstPoint),
	})
}

translations := map[string]string{
	"distance":     i18n.T(ctx, "translation.Distance"),
	"duration":     i18n.T(ctx, "translation.Duration"),
	"calories":     i18n.T(ctx, "translation.Calories"),
	"heartrate":    i18n.T(ctx, "translation.Heart_rate"),
	"speed":        i18n.T(ctx, "translation.Speed"),
	"elevation":    i18n.T(ctx, "translation.Elevation"),
	"cadence":      i18n.T(ctx, "translation.Cadence"),
	"averagespeed": i18n.T(ctx, "translation.Average_speed"),
}
	}}
	<workout-stats
	  tz={ helpers.Timezone(ctx) }
	  lang={ helpers.Language(ctx) }
	  preferred-units={ templ.JSONString(helpers.PreferredUnitsToJSON(pu)) }
	  translations={ templ.JSONString(translations) }
	  data={ templ.JSONString(data) }>
	</workout-stats>

	<script src={ helpers.RouteFor(ctx, "assets") + "/views/workouts/show_stats.js" }></script>
}
